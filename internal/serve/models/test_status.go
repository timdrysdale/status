// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TestStatus Status of a test
//
// swagger:model TestStatus
type TestStatus struct {

	// number of tests attempted to date
	Attempts int64 `json:"attempts,omitempty"`

	// RFC3339 datetime of last test
	// Required: true
	Last *string `json:"last"`

	// did the experiment pass the test last time?
	// Required: true
	Passed *bool `json:"passed"`

	// number of tests passed to date
	Score int64 `json:"score,omitempty"`
}

// Validate validates this test status
func (m *TestStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLast(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePassed(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TestStatus) validateLast(formats strfmt.Registry) error {

	if err := validate.Required("last", "body", m.Last); err != nil {
		return err
	}

	return nil
}

func (m *TestStatus) validatePassed(formats strfmt.Registry) error {

	if err := validate.Required("passed", "body", m.Passed); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this test status based on context it is used
func (m *TestStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TestStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TestStatus) UnmarshalBinary(b []byte) error {
	var res TestStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
