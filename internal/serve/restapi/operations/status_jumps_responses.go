// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/timdrysdale/relay/status/internal/serve/models"
)

// StatusJumpsOKCode is the HTTP code returned for type StatusJumpsOK
const StatusJumpsOKCode int = 200

/*StatusJumpsOK Status

swagger:response statusJumpsOK
*/
type StatusJumpsOK struct {

	/*
	  In: Body
	*/
	Payload models.JumpStatuses `json:"body,omitempty"`
}

// NewStatusJumpsOK creates StatusJumpsOK with default headers values
func NewStatusJumpsOK() *StatusJumpsOK {

	return &StatusJumpsOK{}
}

// WithPayload adds the payload to the status jumps o k response
func (o *StatusJumpsOK) WithPayload(payload models.JumpStatuses) *StatusJumpsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status jumps o k response
func (o *StatusJumpsOK) SetPayload(payload models.JumpStatuses) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatusJumpsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.JumpStatuses{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// StatusJumpsUnauthorizedCode is the HTTP code returned for type StatusJumpsUnauthorized
const StatusJumpsUnauthorizedCode int = 401

/*StatusJumpsUnauthorized Unauthorized

swagger:response statusJumpsUnauthorized
*/
type StatusJumpsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStatusJumpsUnauthorized creates StatusJumpsUnauthorized with default headers values
func NewStatusJumpsUnauthorized() *StatusJumpsUnauthorized {

	return &StatusJumpsUnauthorized{}
}

// WithPayload adds the payload to the status jumps unauthorized response
func (o *StatusJumpsUnauthorized) WithPayload(payload *models.Error) *StatusJumpsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status jumps unauthorized response
func (o *StatusJumpsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatusJumpsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
